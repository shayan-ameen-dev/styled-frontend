import Head from 'next/head';
import { useRouter } from 'next/router';
// Auth0
import { withPageAuthRequired, getSession } from '@auth0/nextjs-auth0';
// Stripe
import Stripe from 'stripe';
// Utils
import { formatMoney } from '../lib/utils';
// Styled
import { StyledOrder } from '../styles/StyledProfile';

const stripe = new Stripe(`${process.env.NEXT_PUBLIC_STRIPE_SECRET_KEY}`);

export const getServerSideProps = withPageAuthRequired({
  async getServerSideProps(ctx) {
    const session = getSession(ctx.req, ctx.res);
    const stripeId = session.user[`${process.env.BASE_URL}/stripe_customer_id`];
    const paymentIntents = await stripe.paymentIntents.list({
      customer: stripeId,
    });
    return { props: { orders: paymentIntents.data } };
  },
});

export default function Profile({ user, orders }) {
  const router = useRouter();

  return (
    <div>
      <Head>
        <title>Profile | Styled</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        {user && (
          <div>
            <h2>{user.name}</h2>
            <p>{user.email}</p>
            <div>
              {orders.map((order) => (
                <StyledOrder key={order.id}>
                  <h1>Order Number: {order.id}</h1>
                  <h2>Amount: {formatMoney(order.amount / 100)}</h2>
                  <h2>Receipt Email: {user.email}</h2>
                </StyledOrder>
              ))}
            </div>
            <button onClick={() => router.push('/api/auth/logout')}>
              Logout
            </button>
          </div>
        )}
      </main>
    </div>
  );
}

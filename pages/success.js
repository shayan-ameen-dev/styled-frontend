import Head from 'next/head';
import { useRouter } from 'next/router';
// Utils
import { formatMoney, toCapitalize } from '../lib/utils';
// Styled
import {
  StyledAddress,
  StyledCard,
  StyledInfoWrapper,
  StyledProductInfo,
  StyledSuccessWrapper,
} from '../styles/StyledSuccess';

import Stripe from 'stripe';

const stripe = new Stripe(`${process.env.NEXT_PUBLIC_STRIPE_SECRET_KEY}`);

export async function getServerSideProps(params) {
  const order = await stripe.checkout.sessions.retrieve(
    params.query.session_id,
    {
      expand: ['line_items'],
    }
  );

  return { props: { order } };
}

export default function Success({ order }) {
  const router = useRouter();

  const { email, address } = order.customer_details;
  return (
    <div>
      <Head>
        <title>Success | Styled</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <StyledSuccessWrapper>
          <StyledCard
            initial={{ opacity: 0, scale: 0.75 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ duration: 0.75 }}
          >
            <h1>Thank you for your order!</h1>
            <h3>A confirmation email has been sent to</h3>
            <h3>{email}</h3>
            <StyledInfoWrapper>
              <StyledAddress>
                <h2>Address</h2>
                {Object.entries(address).map(([key, value]) => (
                  <p key={key}>
                    {toCapitalize(key)} : {value}
                  </p>
                ))}
              </StyledAddress>
              <StyledProductInfo>
                <h2>Products</h2>
                {order.line_items.data.map((item) => {
                  const { id, description, quantity, price } = item;
                  return (
                    <div key={id}>
                      <p>Product: {description}</p>
                      <p>Quantity: {quantity}</p>
                      <p>Price: {formatMoney(price.unit_amount / 100)}</p>
                    </div>
                  );
                })}
              </StyledProductInfo>
            </StyledInfoWrapper>
            <button onClick={() => router.push('/')}>Continue Shopping</button>
          </StyledCard>
        </StyledSuccessWrapper>
      </main>
    </div>
  );
}
